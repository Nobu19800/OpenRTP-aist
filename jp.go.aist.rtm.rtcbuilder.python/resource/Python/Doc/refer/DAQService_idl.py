# Python stubs generated by omniidl from DAQService.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(2,0, __file__)

try:
    _omniORB_StructBase = omniORB.StructBase
except AttributeError:
    class _omniORB_StructBase: pass


#
# Start of module "_GlobalIDL"
#
__name__ = "_GlobalIDL"
_0__GlobalIDL = omniORB.openModule("_GlobalIDL", r"DAQService.idl")
_0__GlobalIDL__POA = omniORB.openModule("_GlobalIDL__POA", r"DAQService.idl")


# interface DAQService
_0__GlobalIDL._d_DAQService = (omniORB.tcInternal.tv_objref, "IDL:DAQService:1.0", "DAQService")
omniORB.typeMapping["IDL:DAQService:1.0"] = _0__GlobalIDL._d_DAQService
_0__GlobalIDL.DAQService = omniORB.newEmptyClass()
class DAQService :
    _NP_RepositoryId = _0__GlobalIDL._d_DAQService[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0__GlobalIDL.DAQService = DAQService
_0__GlobalIDL._tc_DAQService = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._d_DAQService)
omniORB.registerType(DAQService._NP_RepositoryId, _0__GlobalIDL._d_DAQService, _0__GlobalIDL._tc_DAQService)

# DAQService operations and attributes
DAQService._d_setCommand = ((omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_double), (omniORB.tcInternal.tv_long, ), None)
DAQService._d_getCommand = ((), (omniORB.tcInternal.tv_short, ), None)
DAQService._d_checkDone = ((), (omniORB.tcInternal.tv_ulong, ), None)
DAQService._d_setDone = ((), (), None)

# DAQService object reference
class _objref_DAQService (CORBA.Object):
    _NP_RepositoryId = DAQService._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def setCommand(self, *args):
        return _omnipy.invoke(self, "setCommand", _0__GlobalIDL.DAQService._d_setCommand, args)

    def getCommand(self, *args):
        return _omnipy.invoke(self, "getCommand", _0__GlobalIDL.DAQService._d_getCommand, args)

    def checkDone(self, *args):
        return _omnipy.invoke(self, "checkDone", _0__GlobalIDL.DAQService._d_checkDone, args)

    def setDone(self, *args):
        return _omnipy.invoke(self, "setDone", _0__GlobalIDL.DAQService._d_setDone, args)

    __methods__ = ["setCommand", "getCommand", "checkDone", "setDone"] + CORBA.Object.__methods__

omniORB.registerObjref(DAQService._NP_RepositoryId, _objref_DAQService)
_0__GlobalIDL._objref_DAQService = _objref_DAQService
del DAQService, _objref_DAQService

# DAQService skeleton
__name__ = "_GlobalIDL__POA"
class DAQService (PortableServer.Servant):
    _NP_RepositoryId = _0__GlobalIDL.DAQService._NP_RepositoryId


    _omni_op_d = {"setCommand": _0__GlobalIDL.DAQService._d_setCommand, "getCommand": _0__GlobalIDL.DAQService._d_getCommand, "checkDone": _0__GlobalIDL.DAQService._d_checkDone, "setDone": _0__GlobalIDL.DAQService._d_setDone}

DAQService._omni_skeleton = DAQService
_0__GlobalIDL__POA.DAQService = DAQService
del DAQService
__name__ = "_GlobalIDL"

#
# End of module "_GlobalIDL"
#
__name__ = "DAQService_idl"

_exported_modules = ( "_GlobalIDL", )

# The end.
