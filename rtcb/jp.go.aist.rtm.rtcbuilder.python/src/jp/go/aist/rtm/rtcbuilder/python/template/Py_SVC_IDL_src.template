# Python stubs generated by omniidl from ${tmpltHelper.getFilenameNoExt(${idlFileParam.idlPath})}.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(2,0, __file__)

try:
    _omniORB_StructBase = omniORB.StructBase
except AttributeError:
    class _omniORB_StructBase: pass


#
# Start of module "_GlobalIDL"
#
__name__ = "_GlobalIDL"
_0__GlobalIDL = omniORB.openModule("_GlobalIDL", r"${tmpltHelper.getFilenameNoExt(${idlFileParam.idlPath})}.idl")
_0__GlobalIDL__POA = omniORB.openModule("_GlobalIDL__POA", r"${tmpltHelper.getFilenameNoExt(${idlFileParam.idlPath})}.idl")


#foreach($serviceClassParam in ${idlFileParam.serviceClassParams})
#if($velocityCount == 1 )
#foreach($typeDefParam in ${serviceClassParam.typeDefList})
# typedef ... ${typeDefParam.targetDef}
class ${typeDefParam.targetDef}:
    _NP_RepositoryId = "IDL:${typeDefParam.targetDef}:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0__GlobalIDL.${typeDefParam.targetDef} = ${typeDefParam.targetDef}
_0__GlobalIDL._d_${typeDefParam.targetDef}  = (omniORB.tcInternal.tv_sequence, ${pyConv.convCORBA2PythonTypeDef(${typeDefParam.targetDef},${serviceClassParam})}, 0)
_0__GlobalIDL._ad_${typeDefParam.targetDef} = (omniORB.tcInternal.tv_alias, ${typeDefParam.targetDef}._NP_RepositoryId, "${typeDefParam.targetDef}", (omniORB.tcInternal.tv_sequence, ${pyConv.convCORBA2PythonTypeDef(${typeDefParam.targetDef},${serviceClassParam})}, 0))
_0__GlobalIDL._tc_${typeDefParam.targetDef} = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._ad_${typeDefParam.targetDef})
omniORB.registerType(${typeDefParam.targetDef}._NP_RepositoryId, _0__GlobalIDL._ad_${typeDefParam.targetDef}, _0__GlobalIDL._tc_${typeDefParam.targetDef})
del ${typeDefParam.targetDef}

#end
#end
#end
#foreach($serviceClassParam in ${idlFileParam.serviceClassParams})
# interface ${serviceClassParam.name}
_0__GlobalIDL._d_${serviceClassParam.name} = (omniORB.tcInternal.tv_objref, "IDL:${serviceClassParam.name}:1.0", "${serviceClassParam.name}")
omniORB.typeMapping["IDL:${serviceClassParam.name}:1.0"] = _0__GlobalIDL._d_${serviceClassParam.name}
_0__GlobalIDL.${serviceClassParam.name} = omniORB.newEmptyClass()
class ${serviceClassParam.name} :
    _NP_RepositoryId = _0__GlobalIDL._d_${serviceClassParam.name}[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0__GlobalIDL.${serviceClassParam.name} = ${serviceClassParam.name}
_0__GlobalIDL._tc_${serviceClassParam.name} = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._d_${serviceClassParam.name})
omniORB.registerType(${serviceClassParam.name}._NP_RepositoryId, _0__GlobalIDL._d_${serviceClassParam.name}, _0__GlobalIDL._tc_${serviceClassParam.name})

# ${serviceClassParam.name} operations and attributes
#foreach($serviceMethodParam in ${serviceClassParam.methods})
${serviceClassParam.name}._d_${serviceMethodParam.name} = (${pyConv.selectInParamType(${serviceMethodParam},${serviceClassParam})}), (${pyConv.selectOutParamType(${serviceMethodParam},${serviceClassParam})}), None)
#end

# ${serviceClassParam.name} object reference
class _objref_${serviceClassParam.name} (CORBA.Object):
    _NP_RepositoryId = ${serviceClassParam.name}._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

#foreach($serviceMethodParam in ${serviceClassParam.methods})
    def ${serviceMethodParam.name}(self, *args):
        return _omnipy.invoke(self, "${serviceMethodParam.name}", _0__GlobalIDL.${serviceClassParam.name}._d_${serviceMethodParam.name}, args)

#end
    __methods__ = [#foreach($serviceMethodParam in ${serviceClassParam.methods})#if($velocityCount > 1), #end"${serviceMethodParam.name}"#end] + CORBA.Object.__methods__

omniORB.registerObjref(${serviceClassParam.name}._NP_RepositoryId, _objref_${serviceClassParam.name})
_0__GlobalIDL._objref_${serviceClassParam.name} = _objref_${serviceClassParam.name}
del ${serviceClassParam.name}, _objref_${serviceClassParam.name}

# ${serviceClassParam.name} skeleton
__name__ = "_GlobalIDL__POA"
class ${serviceClassParam.name} (PortableServer.Servant):
    _NP_RepositoryId = _0__GlobalIDL.${serviceClassParam.name}._NP_RepositoryId


    _omni_op_d = {#foreach($serviceMethodParam in ${serviceClassParam.methods})#if($velocityCount > 1), #end"${serviceMethodParam.name}": _0__GlobalIDL.${serviceClassParam.name}._d_${serviceMethodParam.name}#end}

${serviceClassParam.name}._omni_skeleton = ${serviceClassParam.name}
_0__GlobalIDL__POA.${serviceClassParam.name} = ${serviceClassParam.name}
del ${serviceClassParam.name}
__name__ = "_GlobalIDL"

#end
#
# End of module "_GlobalIDL"
#
__name__ = "${tmpltHelper.getFilenameNoExt(${idlFileParam.idlPath})}_idl"

_exported_modules = ( "_GlobalIDL", )

# The end.
