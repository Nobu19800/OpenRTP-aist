package jp.go.aist.rtm.toolscommon.model.component.validation;


import jp.go.aist.rtm.toolscommon.model.component.ConnectorProfile;
import jp.go.aist.rtm.toolscommon.model.component.PortInterfaceProfile;
import jp.go.aist.rtm.toolscommon.model.component.PortSynchronizer;
import org.eclipse.emf.common.util.EList;

/**
 * A sample validator interface for {@link jp.go.aist.rtm.toolscommon.model.component.Port}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface PortValidator {
	boolean validate();

	boolean validateOriginalPortString(String value);
	boolean validateSynchronizer(PortSynchronizer value);
	boolean validateNameL(String value);
	boolean validateAllowAnyDataType(boolean value);
	boolean validateAllowAnyInterfaceType(boolean value);
	boolean validateAllowAnyDataflowType(boolean value);
	boolean validateAllowAnySubscriptionType(boolean value);
	boolean validateConnectorProfiles(EList<ConnectorProfile> value);
	boolean validateInterfaces(EList<PortInterfaceProfile> value);
	boolean validateDataflowType(String value);
	boolean validateSubscriptionType(String value);
	boolean validateDataType(String value);
	boolean validateInterfaceType(String value);
}