# Python stubs generated by omniidl from MyServiceChildMulti.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(2,0, __file__)

try:
    _omniORB_StructBase = omniORB.StructBase
except AttributeError:
    class _omniORB_StructBase: pass


#
# Start of module "_GlobalIDL"
#
__name__ = "_GlobalIDL"
_0__GlobalIDL = omniORB.openModule("_GlobalIDL", r"MyServiceChildMulti.idl")
_0__GlobalIDL__POA = omniORB.openModule("_GlobalIDL__POA", r"MyServiceChildMulti.idl")


# typedef ... EchoList1
class EchoList1:
    _NP_RepositoryId = "IDL:EchoList1:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0__GlobalIDL.EchoList1 = EchoList1
_0__GlobalIDL._d_EchoList1  = (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0)
_0__GlobalIDL._ad_EchoList1 = (omniORB.tcInternal.tv_alias, EchoList1._NP_RepositoryId, "EchoList1", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0__GlobalIDL._tc_EchoList1 = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._ad_EchoList1)
omniORB.registerType(EchoList1._NP_RepositoryId, _0__GlobalIDL._ad_EchoList1, _0__GlobalIDL._tc_EchoList1)
del EchoList1
# typedef ... ValueList1
class ValueList1:
    _NP_RepositoryId = "IDL:ValueList1:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0__GlobalIDL.ValueList1 = ValueList1
_0__GlobalIDL._d_ValueList1  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_float, 0)
_0__GlobalIDL._ad_ValueList1 = (omniORB.tcInternal.tv_alias, ValueList1._NP_RepositoryId, "ValueList1", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_float, 0))
_0__GlobalIDL._tc_ValueList1 = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._ad_ValueList1)
omniORB.registerType(ValueList1._NP_RepositoryId, _0__GlobalIDL._ad_ValueList1, _0__GlobalIDL._tc_ValueList1)
del ValueList1

# interface MyService
_0__GlobalIDL._d_MyService = (omniORB.tcInternal.tv_objref, "IDL:MyService:1.0", "MyService")
omniORB.typeMapping["IDL:MyService:1.0"] = _0__GlobalIDL._d_MyService
_0__GlobalIDL.MyService = omniORB.newEmptyClass()
class MyService :
    _NP_RepositoryId = _0__GlobalIDL._d_MyService[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0__GlobalIDL.MyService = MyService
_0__GlobalIDL._tc_MyService = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._d_MyService)
omniORB.registerType(MyService._NP_RepositoryId, _0__GlobalIDL._d_MyService, _0__GlobalIDL._tc_MyService)

# MyService operations and attributes
MyService._d_get_echo_history = ((), (omniORB.typeMapping["IDL:EchoList1:1.0"], ), None)
MyService._d_get_value_history = ((), (omniORB.typeMapping["IDL:ValueList1:1.0"], ), None)

# MyService object reference
class _objref_MyService (CORBA.Object):
    _NP_RepositoryId = MyService._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def get_echo_history(self, *args):
        return _omnipy.invoke(self, "get_echo_history", _0__GlobalIDL.MyService._d_get_echo_history, args)

    def get_value_history(self, *args):
        return _omnipy.invoke(self, "get_value_history", _0__GlobalIDL.MyService._d_get_value_history, args)

    __methods__ = ["get_echo_history", "get_value_history"] + CORBA.Object.__methods__

omniORB.registerObjref(MyService._NP_RepositoryId, _objref_MyService)
_0__GlobalIDL._objref_MyService = _objref_MyService
del MyService, _objref_MyService

# MyService skeleton
__name__ = "_GlobalIDL__POA"
class MyService (PortableServer.Servant):
    _NP_RepositoryId = _0__GlobalIDL.MyService._NP_RepositoryId


    _omni_op_d = {"get_echo_history": _0__GlobalIDL.MyService._d_get_echo_history, "get_value_history": _0__GlobalIDL.MyService._d_get_value_history}

MyService._omni_skeleton = MyService
_0__GlobalIDL__POA.MyService = MyService
del MyService
__name__ = "_GlobalIDL"

# interface MyService2
_0__GlobalIDL._d_MyService2 = (omniORB.tcInternal.tv_objref, "IDL:MyService2:1.0", "MyService2")
omniORB.typeMapping["IDL:MyService2:1.0"] = _0__GlobalIDL._d_MyService2
_0__GlobalIDL.MyService2 = omniORB.newEmptyClass()
class MyService2 :
    _NP_RepositoryId = _0__GlobalIDL._d_MyService2[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0__GlobalIDL.MyService2 = MyService2
_0__GlobalIDL._tc_MyService2 = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._d_MyService2)
omniORB.registerType(MyService2._NP_RepositoryId, _0__GlobalIDL._d_MyService2, _0__GlobalIDL._tc_MyService2)

# MyService2 operations and attributes
MyService2._d_setGain = ((omniORB.tcInternal.tv_float, ), (), None)
MyService2._d_getGain = ((), (omniORB.tcInternal.tv_float, ), None)

# MyService2 object reference
class _objref_MyService2 (CORBA.Object):
    _NP_RepositoryId = MyService2._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def setGain(self, *args):
        return _omnipy.invoke(self, "setGain", _0__GlobalIDL.MyService2._d_setGain, args)

    def getGain(self, *args):
        return _omnipy.invoke(self, "getGain", _0__GlobalIDL.MyService2._d_getGain, args)

    __methods__ = ["setGain", "getGain"] + CORBA.Object.__methods__

omniORB.registerObjref(MyService2._NP_RepositoryId, _objref_MyService2)
_0__GlobalIDL._objref_MyService2 = _objref_MyService2
del MyService2, _objref_MyService2

# MyService2 skeleton
__name__ = "_GlobalIDL__POA"
class MyService2 (PortableServer.Servant):
    _NP_RepositoryId = _0__GlobalIDL.MyService2._NP_RepositoryId


    _omni_op_d = {"setGain": _0__GlobalIDL.MyService2._d_setGain, "getGain": _0__GlobalIDL.MyService2._d_getGain}

MyService2._omni_skeleton = MyService2
_0__GlobalIDL__POA.MyService2 = MyService2
del MyService2
__name__ = "_GlobalIDL"

# interface MyServiceChild
_0__GlobalIDL._d_MyServiceChild = (omniORB.tcInternal.tv_objref, "IDL:MyServiceChild:1.0", "MyServiceChild")
omniORB.typeMapping["IDL:MyServiceChild:1.0"] = _0__GlobalIDL._d_MyServiceChild
_0__GlobalIDL.MyServiceChild = omniORB.newEmptyClass()
class MyServiceChild :
    _NP_RepositoryId = _0__GlobalIDL._d_MyServiceChild[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0__GlobalIDL.MyServiceChild = MyServiceChild
_0__GlobalIDL._tc_MyServiceChild = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._d_MyServiceChild)
omniORB.registerType(MyServiceChild._NP_RepositoryId, _0__GlobalIDL._d_MyServiceChild, _0__GlobalIDL._tc_MyServiceChild)

# MyServiceChild operations and attributes
MyServiceChild._d_setPos = ((omniORB.tcInternal.tv_float, ), (), None)
MyServiceChild._d_getPos = ((), (omniORB.typeMapping["IDL:EchoList1:1.0"], ), None)
MyServiceChild._d_get_echo_history = ((), (omniORB.typeMapping["IDL:EchoList1:1.0"], ), None)
MyServiceChild._d_get_value_history = ((), (omniORB.typeMapping["IDL:ValueList1:1.0"], ), None)
MyServiceChild._d_setGain = ((omniORB.tcInternal.tv_float, ), (), None)
MyServiceChild._d_getGain = ((), (omniORB.tcInternal.tv_float, ), None)

# MyServiceChild object reference
class _objref_MyServiceChild (CORBA.Object):
    _NP_RepositoryId = MyServiceChild._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def setPos(self, *args):
        return _omnipy.invoke(self, "setPos", _0__GlobalIDL.MyServiceChild._d_setPos, args)

    def getPos(self, *args):
        return _omnipy.invoke(self, "getPos", _0__GlobalIDL.MyServiceChild._d_getPos, args)

    def get_echo_history(self, *args):
        return _omnipy.invoke(self, "get_echo_history", _0__GlobalIDL.MyServiceChild._d_get_echo_history, args)

    def get_value_history(self, *args):
        return _omnipy.invoke(self, "get_value_history", _0__GlobalIDL.MyServiceChild._d_get_value_history, args)

    def setGain(self, *args):
        return _omnipy.invoke(self, "setGain", _0__GlobalIDL.MyServiceChild._d_setGain, args)

    def getGain(self, *args):
        return _omnipy.invoke(self, "getGain", _0__GlobalIDL.MyServiceChild._d_getGain, args)

    __methods__ = ["setPos", "getPos", "get_echo_history", "get_value_history", "setGain", "getGain"] + CORBA.Object.__methods__

omniORB.registerObjref(MyServiceChild._NP_RepositoryId, _objref_MyServiceChild)
_0__GlobalIDL._objref_MyServiceChild = _objref_MyServiceChild
del MyServiceChild, _objref_MyServiceChild

# MyServiceChild skeleton
__name__ = "_GlobalIDL__POA"
class MyServiceChild (PortableServer.Servant):
    _NP_RepositoryId = _0__GlobalIDL.MyServiceChild._NP_RepositoryId


    _omni_op_d = {"setPos": _0__GlobalIDL.MyServiceChild._d_setPos, "getPos": _0__GlobalIDL.MyServiceChild._d_getPos, "get_echo_history": _0__GlobalIDL.MyServiceChild._d_get_echo_history, "get_value_history": _0__GlobalIDL.MyServiceChild._d_get_value_history, "setGain": _0__GlobalIDL.MyServiceChild._d_setGain, "getGain": _0__GlobalIDL.MyServiceChild._d_getGain}

MyServiceChild._omni_skeleton = MyServiceChild
_0__GlobalIDL__POA.MyServiceChild = MyServiceChild
del MyServiceChild
__name__ = "_GlobalIDL"

#
# End of module "_GlobalIDL"
#
__name__ = "MyServiceChildMulti_idl"

_exported_modules = ( "_GlobalIDL", )

# The end.
