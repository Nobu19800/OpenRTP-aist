//
// Generated by JTB 1.3.2
//

package jp.go.aist.rtm.rtcbuilder.corba.idl.parser.syntaxtree;

/**
 * Grammar production:
 * <PRE>
 * param_attribute -> param_attribute()
 * param_type_spec -> param_type_spec()
 * simple_declarator -> simple_declarator()
 * </PRE>
 */
public class param_dcl implements Node {
   private Node parent;
   public param_attribute param_attribute;
   public param_type_spec param_type_spec;
   public simple_declarator simple_declarator;

   public param_dcl(param_attribute n0, param_type_spec n1, simple_declarator n2) {
      param_attribute = n0;
      if ( param_attribute != null ) param_attribute.setParent(this);
      param_type_spec = n1;
      if ( param_type_spec != null ) param_type_spec.setParent(this);
      simple_declarator = n2;
      if ( simple_declarator != null ) simple_declarator.setParent(this);
   }

   public void accept(jp.go.aist.rtm.rtcbuilder.corba.idl.parser.visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(jp.go.aist.rtm.rtcbuilder.corba.idl.parser.visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(jp.go.aist.rtm.rtcbuilder.corba.idl.parser.visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(jp.go.aist.rtm.rtcbuilder.corba.idl.parser.visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
   public void setParent(Node n) { parent = n; }
   public Node getParent()       { return parent; }
}

