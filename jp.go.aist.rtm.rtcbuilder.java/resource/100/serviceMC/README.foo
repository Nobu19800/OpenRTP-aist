======================================================================
  RTComponent: foo specificatioin
  OpenRTM-aist-1.0.0
  Date: $Date$
  This file is generated by rtc-template with the following argments.
#   rtc-template -bjava --module-name=foo 
#   --module-desc='ModuleDescription' --module-version=1.0.0 --module-vendor=VenderName 
#   --module-category=Category --module-comp-type=UNIQUE 
#   --module-act-type=EVENTDRIVEN --module-max-inst=5 
#   --service=sv_name:if_name:SimpleService::MyService 
#   --consumer=sv_name2:if_name2:SimpleService::MyService 
======================================================================
    Basic Information
======================================================================
# <rtc-template block="module">
Module Name: foo
Description: ModuleDescription
Version:     1.0.0
Vendor:      VenderName
Category:    Category
Kind:        DataFlowComponent
Comp. Type:  UNIQUE
Act. Type:   EVENTDRIVEN
MAX Inst.:   5
Lang:        Java
Lang Type:   
# </rtc-template>
======================================================================
    Activity definition
======================================================================
[on_initialize]
[on_finalize]
[on_startup]
[on_shutdown]
[on_activated]
[on_deactivated]
[on_execute]
[on_aborting]
[on_error]
[on_reset]
[on_state_update]
[on_rate_changed]
======================================================================
    InPorts definition
======================================================================
# <rtc-template block="inport">
# </rtc-template>
======================================================================
    OutPorts definition
======================================================================
# <rtc-template block="outport">
# </rtc-template>
======================================================================
    Service Port definition
======================================================================
# <rtc-template block="serviceport">
	PortName:    sv_name
	Description: 
	Interface:   
		[Service Provider Interfaces]
		Name:          if_name
		Type:          SimpleService::MyService
		Description:   
		Argument:      
		Return Value:  
		Exception:     
		PreCondition:  
		PostCondition: 
	PortName:    sv_name2
	Description: 
	Interface:   
		[Service Consumer Interfaces]
		Name:          if_name2
		Type:          SimpleService::MyService
		Description:   
		Argument:      
		Return Value:  
		Exception:     
		PreCondition:  
		PostCondition: 
# </rtc-template> 
======================================================================
    Configuration definition
======================================================================
# <rtc-template block="configuration">
# </rtc-template> 
This area is reserved for future OpenRTM.
