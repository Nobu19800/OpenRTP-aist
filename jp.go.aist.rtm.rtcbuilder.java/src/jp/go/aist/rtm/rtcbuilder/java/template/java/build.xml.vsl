#set( $dollarStr = "$" )
<!--
# -*- Buildfile -*-
# @file  build_${rtcParam.name}.xml
# @brief RTComponent makefile for "${rtcParam.name} component"
# @date  ${dollarStr}Date${dollarStr}
#
# ${dollarStr}Id${dollarStr}
 -->
<project name="${rtcParam.name}" default="generatedoc">
	<property name="source" value="src" />
	<property name="dest" value="bin" />
	<property name="doc" value="doc" />
	<property environment="env" />

	<target name="mkdir">
		<mkdir dir="${dollarStr}{dest}" />
	</target>

#if( ${rtcParam.checkWithoutDefaultPathes()} == true )
	<target name="idlcompile"  depends="mkdir">
#foreach($idlPath in ${rtcParam.providerIdlPathes})
#if( ${idlPath.checkDefault()} == false )
		<exec executable="${dollarStr}{java.home}/../bin/idlj">
			<arg line="-td 'src' #foreach($idlSearchPath in ${idlPath.idlSearchPathes})-i '${idlSearchPath}' #end-fall 'idl/${tmpltHelper.getFileName(${idlPath.idlFile})}'"/>
		</exec>
#foreach ($idl in ${idlPath.includeIdlParamsWithoutDefault})
		<exec executable="${dollarStr}{java.home}/../bin/idlj">
			<arg line="-td 'src' #foreach($idlSearchPath in ${idlPath.idlSearchPathes})-i '${idlSearchPath}' #end-fall 'idl/${tmpltHelper.getFileName(${idl.idlFile})}'"/>
		</exec>
#end
#end
#end
#foreach($idlPath in ${rtcParam.consumerIdlPathes})
#if( ${idlPath.checkDefault()} == false )
		<exec executable="${dollarStr}{java.home}/../bin/idlj">
			<arg line="-td 'src' #foreach($idlSearchPath in ${idlPath.idlSearchPathes})-i '${idlSearchPath}' #end-fall 'idl/${tmpltHelper.getFileName(${idlPath.idlFile})}'"/>
		</exec>
#foreach ($idl in ${idlPath.includeIdlParamsWithoutDefault})
		<exec executable="${dollarStr}{java.home}/../bin/idlj">
			<arg line="-td 'src' #foreach($idlSearchPath in ${idlPath.idlSearchPathes})-i '${idlSearchPath}' #end-fall 'idl/${tmpltHelper.getFileName(${idl.idlFile})}'"/>
		</exec>
#end
#end
#end
	</target>
#end

#if( ${rtcParam.checkWithoutDefaultPathes()} == true )
	<target name="compile" depends="idlcompile">
#else
	<target name="compile" depends="mkdir">
#end
		<javac includeantruntime="false" srcdir="${dollarStr}{source}" destdir="${dollarStr}{dest}">
			<classpath>
				<fileset dir="${dollarStr}{env.RTM_JAVA_ROOT}/jar">
					<include name="*.jar"/>
				</fileset>
#if( ${rtcParam.libraryPathes.size()} > 0 )
#foreach($javaRef in ${rtcParam.libraryPathes})
				<pathelement location="'${javaRef}'"/>
#end
#end
			</classpath>
		</javac>
	</target>
	<target name="generatedoc" depends="compile">
		<javadoc 
                        Locale="ja_JP"
                        destdir="${dollarStr}{doc}"
                        docencoding="UTF-8"
			author="true" doctitle="${rtcParam.name}" 
			nodeprecated="false" nodeprecatedlist="false" 
                        noindex="false" nonavbar="false" notree="false" 
			package="yes" splitindex="true" 
                        use="true" version="true" charset="UTF-8" 
                        >
			<classpath>
				<fileset dir="${dollarStr}{env.RTM_JAVA_ROOT}/jar">
					<include name="*.jar"/>
				</fileset>
			</classpath>
			<sourcefiles>
				<fileset dir="${dollarStr}{source}">
					<include name="**/*.java"/>
				</fileset>
                	</sourcefiles>
                </javadoc>
	</target>
</project>
