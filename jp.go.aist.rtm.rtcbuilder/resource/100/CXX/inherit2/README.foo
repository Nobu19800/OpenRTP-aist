======================================================================
  RTComponent: foo specificatioin

  OpenRTM-aist-1.0.0
  Date: $Date$

  This file is generated by rtc-template with the following argments.

#   rtc-template -bcxx --module-name=foo 
#   --module-desc='test module' --module-version=1.0.1 --module-vendor=TA 
#   --module-category=sample --module-comp-type=STATIC 
#   --module-act-type=PERIODIC --module-max-inst=2 
#   --service-idl=C:\Tech-Arts\EclipseRTM\jp.go.aist.rtm.rtcbuilder\resource\100\CXX\inherit2\MyServiceChildMulti.idl --service-idl=C:\Tech-Arts\EclipseRTM\jp.go.aist.rtm.rtcbuilder\resource\100\CXX\inherit2\MyServiceChildWithType.idl 
#   --consumer-idl=C:\Tech-Arts\EclipseRTM\jp.go.aist.rtm.rtcbuilder\resource\100\CXX\inherit2\MyServiceChildMulti.idl --consumer-idl=C:\Project\RTM\git\jp.go.aist.rtm.rtcbuilder\resource\100\CXX\inherit2\MyServiceChildWithType.idl 
#   --service=MyServiceProvider:MyServiceProvider:MyServiceChild 
#   --service=MyServiceProvider:MyServiceProvider2:MyServiceWithTypeChild 
#   --consumer=MyServiceRequire:MyServiceRequire:MyServiceChild 
#   --consumer=MyServiceRequire:MyServiceRequire2:MyServiceWithTypeChild 


======================================================================
    Basic Information
======================================================================
# <rtc-template block="module">
Module Name: foo
Description: test module
Version:     1.0.1
Vendor:      TA
Category:    sample
Kind:        DataFlowComponent
Comp. Type:  STATIC
Act. Type:   PERIODIC
MAX Inst.:   2
Lang:        C++
Lang Type:   

# </rtc-template>


======================================================================
    Activity definition
======================================================================

[on_initialize]

[on_finalize]

[on_startup]

[on_shutdown]

[on_activated]

[on_deactivated]

[on_execute]

[on_aborting]

[on_error]

[on_reset]

[on_state_update]

[on_rate_changed]

======================================================================
    InPorts definition
======================================================================
# <rtc-template block="inport">


# </rtc-template>

======================================================================
    OutPorts definition
======================================================================
# <rtc-template block="outport">


# </rtc-template>


======================================================================
    Service Port definition
======================================================================
# <rtc-template block="serviceport">
	PortName:    MyServiceProvider
	Description: 
	Interface:   
		[Service Provider Interfaces]
		Name:          MyServiceProvider
		Type:          MyServiceChild
		Description:   
		Argument:      
		Return Value:  
		Exception:     
		PreCondition:  
		PostCondition: 
		[Service Provider Interfaces]
		Name:          MyServiceProvider2
		Type:          MyServiceWithTypeChild
		Description:   
		Argument:      
		Return Value:  
		Exception:     
		PreCondition:  
		PostCondition: 
	PortName:    MyServiceRequire
	Description: 
	Interface:   
		[Service Consumer Interfaces]
		Name:          MyServiceRequire
		Type:          MyServiceChild
		Description:   
		Argument:      
		Return Value:  
		Exception:     
		PreCondition:  
		PostCondition: 
		[Service Consumer Interfaces]
		Name:          MyServiceRequire2
		Type:          MyServiceWithTypeChild
		Description:   
		Argument:      
		Return Value:  
		Exception:     
		PreCondition:  
		PostCondition: 
# </rtc-template> 

======================================================================
    Configuration definition
======================================================================
# <rtc-template block="configuration">
# </rtc-template> 
This area is reserved for future OpenRTM.

