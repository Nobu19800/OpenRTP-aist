module OpenHRP
{
  interface WalkGeneratorService
  {
    /***********************************
     *
     *         Relative Motion
     *
     ***********************************/

    // Set the Target Position 
    // Function returns upon the robots arrival at destination. Must not
    // be used in the real-time part of a plugin
    void setTargetPos(in double x, in double y, in double th);

    // Set the Target Position without waiting for sequence
    // interpolation to finish. Takes time depending on distance so can
    // not be used in the real-time part of a plugin.
    void setTargetPosNoWait(in double x, in double y, in double th);

    // Set Arc
    // Function returns upon robots arrival at destination. Must not be
    // used in real-time part of plugin.
    void setArc(in double x, in double y, in double th);

    // Set Arc without waiting for sequence interpolation to
    // finish. Takes time depending on the distance so can not be used
    // in the real-time part of a plugin.
    void setArcNoWait(in double x, in double y, in double th);

    // Set the Right foot Position
    // Function returns upon robots arrival at destination. Must not be
    // used in real-time part of plugin.
    void setRfootPos(in double x, in double y, in double th);

    // Set the Right foot Position without waiting for sequence interpolation to
    // finish. Takes time depending on the distance so can not be used
    // in the real-time part of a plugin.
    void setRfootPosNoWait(in double x, in double y, in double th);

    // Set the Left foot Position
    // Function returns upon robots arrival at destination. Must not be
    // used in real-time part of plugin.
    void setLfootPos(in double x, in double y, in double th);

    // Set the Left foot Position without waiting for sequence interpolation to
    // finish. Takes time depending on the distance so can not be used
    // in the real-time part of a plugin.
    void setLfootPosNoWait(in double x, in double y, in double th);


    /************************************
     *
     *        Walk Start/Stop
     *
     ************************************/
    // Stop Walking

    // Function returns when sequence interpolation has finished and
    // robot has halted. Must not be used in real-time part of plugin.
    void stopWalking();

    // Wait for robot to arrive at designated goal. Returns when robot
    // has come to a complete stop. Must not be used in real-time part
    // of plugin.
    void waitArrival();

    /************************************
     *
     *        Stepping
     *
     ************************************/
    // Start Stepping
    // Function returns immediately so can be used in real-time part of
    // plugin.
    void startStepping();

    // Stop Stepping
    // Function returns only after robot has come to a complete
    // stop. Function can not be used in real-time of plugin.
    void stopStepping();

    // Set parameter which make robot walk forwards. 
    // Function returns immediately so can be used in real-time part of
    // plugin.
    void setWalkingVelocity(in double dx, in double dy, in double dth);

    /**************************************
     *
     *         W a i s t
     *
     **************************************/
    // Get Waist Velocity 
    // Returns immediately so can be used in the real-time part of a
    // plugin
    void getWaistVelocity(out double vx, out double vy);

    boolean isWalking();
  };
};
