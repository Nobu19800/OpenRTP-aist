//
// Generated by JTB 1.3.2
//

package jp.go.aist.rtm.rtcbuilder.corba.idl.parser.syntaxtree;

/**
 * Grammar production:
 * nodeToken -> "union"
 * identifier -> identifier()
 * nodeToken1 -> "switch"
 * nodeToken2 -> "("
 * switch_type_spec -> switch_type_spec()
 * nodeToken3 -> ")"
 * nodeToken4 -> "{"
 * switch_body -> switch_body()
 * nodeToken5 -> "}"
 */
public class union_type implements Node {
   private Node parent;
   public NodeToken nodeToken;
   public identifier identifier;
   public NodeToken nodeToken1;
   public NodeToken nodeToken2;
   public switch_type_spec switch_type_spec;
   public NodeToken nodeToken3;
   public NodeToken nodeToken4;
   public switch_body switch_body;
   public NodeToken nodeToken5;

   public union_type(NodeToken n0, identifier n1, NodeToken n2, NodeToken n3, switch_type_spec n4, NodeToken n5, NodeToken n6, switch_body n7, NodeToken n8) {
      nodeToken = n0;
      if ( nodeToken != null ) nodeToken.setParent(this);
      identifier = n1;
      if ( identifier != null ) identifier.setParent(this);
      nodeToken1 = n2;
      if ( nodeToken1 != null ) nodeToken1.setParent(this);
      nodeToken2 = n3;
      if ( nodeToken2 != null ) nodeToken2.setParent(this);
      switch_type_spec = n4;
      if ( switch_type_spec != null ) switch_type_spec.setParent(this);
      nodeToken3 = n5;
      if ( nodeToken3 != null ) nodeToken3.setParent(this);
      nodeToken4 = n6;
      if ( nodeToken4 != null ) nodeToken4.setParent(this);
      switch_body = n7;
      if ( switch_body != null ) switch_body.setParent(this);
      nodeToken5 = n8;
      if ( nodeToken5 != null ) nodeToken5.setParent(this);
   }

   public union_type(identifier n0, switch_type_spec n1, switch_body n2) {
      nodeToken = new NodeToken("union");
      if ( nodeToken != null ) nodeToken.setParent(this);
      identifier = n0;
      if ( identifier != null ) identifier.setParent(this);
      nodeToken1 = new NodeToken("switch");
      if ( nodeToken1 != null ) nodeToken1.setParent(this);
      nodeToken2 = new NodeToken("(");
      if ( nodeToken2 != null ) nodeToken2.setParent(this);
      switch_type_spec = n1;
      if ( switch_type_spec != null ) switch_type_spec.setParent(this);
      nodeToken3 = new NodeToken(")");
      if ( nodeToken3 != null ) nodeToken3.setParent(this);
      nodeToken4 = new NodeToken("{");
      if ( nodeToken4 != null ) nodeToken4.setParent(this);
      switch_body = n2;
      if ( switch_body != null ) switch_body.setParent(this);
      nodeToken5 = new NodeToken("}");
      if ( nodeToken5 != null ) nodeToken5.setParent(this);
   }

   public void accept(jp.go.aist.rtm.rtcbuilder.corba.idl.parser.visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(jp.go.aist.rtm.rtcbuilder.corba.idl.parser.visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(jp.go.aist.rtm.rtcbuilder.corba.idl.parser.visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(jp.go.aist.rtm.rtcbuilder.corba.idl.parser.visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
   public void setParent(Node n) { parent = n; }
   public Node getParent()       { return parent; }
}

