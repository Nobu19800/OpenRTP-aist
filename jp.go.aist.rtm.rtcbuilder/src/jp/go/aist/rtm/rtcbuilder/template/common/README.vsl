======================================================================
  RTComponent: ${rtcParam.name} specificatioin

  OpenRTM-aist-${rtcParam.rtmVersion}
#set( $Date$ = "dummy" )
  Date: \$Date$
#if( ${rtcParam.docCreator.length()} > 0 )

  @author ${tmpltHelper.convertReadMeAuthorDoc(${rtcParam.docCreator})}
#end
#if( ${rtcParam.docLicense.length()} > 0 )

  ${tmpltHelper.convertReadMeCopyRightDoc(${rtcParam.docLicense})}
#end

======================================================================
    Basic Information
======================================================================
# <rtc-template block="module">
Module Name: ${rtcParam.name}
Description: ${rtcParam.description}
Version:     ${rtcParam.version}
Vendor:      ${rtcParam.vender}
Category:    ${rtcParam.category}
Kind:        ${rtcParam.componentKind}
Comp. Type:  ${rtcParam.componentType}
Act. Type:   ${rtcParam.activityType}
MAX Inst.:   ${rtcParam.maxInstance}
Lang:        ${rtcParam.language}
Lang Type:   

#if(${rtcParam.docDescription.length()}>0)Overview:    ${tmpltHelper.convertReadMeModuleDoc(${rtcParam.docDescription})}
#end
#if(${rtcParam.docInOut.length()}>0)In/Out:      ${tmpltHelper.convertReadMeModuleDoc(${rtcParam.docInOut})}
#end
#if(${rtcParam.docAlgorithm.length()}>0)Algorithm:   ${tmpltHelper.convertReadMeModuleDoc(${rtcParam.docAlgorithm})}
#end
#if(${rtcParam.docReference.length()}>0)Reference:   ${tmpltHelper.convertReadMeModuleDoc(${rtcParam.docReference})}
#end
# </rtc-template>


======================================================================
    Activity definition
======================================================================

[on_initialize]#if(!${rtcParam.IsNotImplemented(0)})    implemented#end

#if(${rtcParam.getDocActionOverView(0).length()}>0)	Description:   ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionOverView(0)})}
#end
#if(${rtcParam.getDocActionPreCondition(0).length()}>0)	PreCondition:  ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionPreCondition(0)})}
#end
#if(${rtcParam.getDocActionPostCondition(0).length()}>0)	PostCondition: ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionPostCondition(0)})}
#end

[on_finalize]#if(!${rtcParam.IsNotImplemented(1)})      implemented#end

#if(${rtcParam.getDocActionOverView(1).length()}>0)	Description:   ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionOverView(1)})}
#end
#if(${rtcParam.getDocActionPreCondition(1).length()}>0)	PreCondition:  ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionPreCondition(1)})}
#end
#if(${rtcParam.getDocActionPostCondition(1).length()}>0)	PostCondition: ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionPostCondition(1)})}
#end

[on_startup]#if(!${rtcParam.IsNotImplemented(2)})       implemented#end

#if(${rtcParam.getDocActionOverView(2).length()}>0)	Description:   ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionOverView(2)})}
#end
#if(${rtcParam.getDocActionPreCondition(2).length()}>0)	PreCondition:  ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionPreCondition(2)})}
#end
#if(${rtcParam.getDocActionPostCondition(2).length()}>0)	PostCondition: ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionPostCondition(2)})}
#end

[on_shutdown]#if(!${rtcParam.IsNotImplemented(3)})      implemented#end

#if(${rtcParam.getDocActionOverView(3).length()}>0)	Description:   ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionOverView(3)})}
#end
#if(${rtcParam.getDocActionPreCondition(3).length()}>0)	PreCondition:  ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionPreCondition(3)})}
#end
#if(${rtcParam.getDocActionPostCondition(3).length()}>0)	PostCondition: ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionPostCondition(3)})}
#end

[on_activated]#if(!${rtcParam.IsNotImplemented(4)})     implemented#end

#if(${rtcParam.getDocActionOverView(4).length()}>0)	Description:   ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionOverView(4)})}
#end
#if(${rtcParam.getDocActionPreCondition(4).length()}>0)	PreCondition:  ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionPreCondition(4)})}
#end
#if(${rtcParam.getDocActionPostCondition(4).length()}>0)	PostCondition: ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionPostCondition(4)})}
#end

[on_deactivated]#if(!${rtcParam.IsNotImplemented(5)})   implemented#end

#if(${rtcParam.getDocActionOverView(5).length()}>0)	Description:   ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionOverView(5)})}
#end
#if(${rtcParam.getDocActionPreCondition(5).length()}>0)	PreCondition:  ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionPreCondition(5)})}
#end
#if(${rtcParam.getDocActionPostCondition(5).length()}>0)	PostCondition: ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionPostCondition(5)})}
#end

[on_execute]#if(!${rtcParam.IsNotImplemented(9)})       implemented#end

#if(${rtcParam.getDocActionOverView(9).length()}>0)	Description:   ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionOverView(9)})}
#end
#if(${rtcParam.getDocActionPreCondition(9).length()}>0)	PreCondition:  ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionPreCondition(9)})}
#end
#if(${rtcParam.getDocActionPostCondition(9).length()}>0)	PostCondition: ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionPostCondition(9)})}
#end

[on_aborting]#if(!${rtcParam.IsNotImplemented(6)})      implemented#end

#if(${rtcParam.getDocActionOverView(6).length()}>0)	Description:   ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionOverView(6)})}
#end
#if(${rtcParam.getDocActionPreCondition(6).length()}>0)	PreCondition:  ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionPreCondition(6)})}
#end
#if(${rtcParam.getDocActionPostCondition(6).length()}>0)	PostCondition: ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionPostCondition(6)})}
#end

[on_error]#if(!${rtcParam.IsNotImplemented(7)})         implemented#end

#if(${rtcParam.getDocActionOverView(7).length()}>0)	Description:   ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionOverView(7)})}
#end
#if(${rtcParam.getDocActionPreCondition(7).length()}>0)	PreCondition:  ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionPreCondition(7)})}
#end
#if(${rtcParam.getDocActionPostCondition(7).length()}>0)	PostCondition: ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionPostCondition(7)})}
#end

[on_reset]#if(!${rtcParam.IsNotImplemented(8)})         implemented#end

#if(${rtcParam.getDocActionOverView(8).length()}>0)	Description:   ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionOverView(8)})}
#end
#if(${rtcParam.getDocActionPreCondition(8).length()}>0)	PreCondition:  ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionPreCondition(8)})}
#end
#if(${rtcParam.getDocActionPostCondition(8).length()}>0)	PostCondition: ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionPostCondition(8)})}
#end

[on_state_update]#if(!${rtcParam.IsNotImplemented(10)})  implemented#end

#if(${rtcParam.getDocActionOverView(10).length()}>0)	Description:   ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionOverView(10)})}
#end
#if(${rtcParam.getDocActionPreCondition(10).length()}>0)	PreCondition:  ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionPreCondition(10)})}
#end
#if(${rtcParam.getDocActionPostCondition(10).length()}>0)	PostCondition: ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionPostCondition(10)})}
#end

[on_rate_changed]#if(!${rtcParam.IsNotImplemented(11)})  implemented#end

#if(${rtcParam.getDocActionOverView(11).length()}>0)	Description:   ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionOverView(11)})}
#end
#if(${rtcParam.getDocActionPreCondition(11).length()}>0)	PreCondition:  ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionPreCondition(11)})}
#end
#if(${rtcParam.getDocActionPostCondition(11).length()}>0)	PostCondition: ${tmpltHelper.convertReadMeActivityDoc(${rtcParam.getDocActionPostCondition(11)})}
#end

======================================================================
    InPorts definition
======================================================================
# <rtc-template block="inport">

#foreach($port in ${rtcParam.inports})
	Name:        ${port.name}
	PortNumber:  #set($count= ${velocityCount} - 1)$count
	Description: ${tmpltHelper.convertReadMePortDoc(${port.docDescription})}
	PortType: 
	DataType:    ${port.type}
	MaxOut: 
	[Data Elements]
		Name:
		Type:            ${tmpltHelper.convertReadMePortDetailDoc(${port.docType})}
		Number:          ${tmpltHelper.convertReadMePortDetailDoc(${port.docNum})}
		Semantics:       ${tmpltHelper.convertReadMePortDetailDoc(${port.docSemantics})}
		Unit:            ${tmpltHelper.convertReadMePortDetailDoc(${port.docUnit})}
		Frequency:       ${tmpltHelper.convertReadMePortDetailDoc(${port.docOccurrence})}
		Operation Cycle: ${tmpltHelper.convertReadMePortDetailDoc(${port.docOperation})}
		RangeLow:
		RangeHigh:
		DefaultValue:

#end

# </rtc-template>

======================================================================
    OutPorts definition
======================================================================
# <rtc-template block="outport">

#foreach($port in ${rtcParam.outports})
	Name:        ${port.name}
	PortNumber:  #set($count= ${velocityCount} - 1)$count
	Description: ${tmpltHelper.convertReadMePortDoc(${port.docDescription})}
	PortType: 
	DataType:    ${port.type}
	MaxOut: 
	[Data Elements]
		Name:
		Type:            ${tmpltHelper.convertReadMePortDetailDoc(${port.docType})}
		Number:          ${tmpltHelper.convertReadMePortDetailDoc(${port.docNum})}
		Semantics:       ${tmpltHelper.convertReadMePortDetailDoc(${port.docSemantics})}
		Unit:            ${tmpltHelper.convertReadMePortDetailDoc(${port.docUnit})}
		Frequency:       ${tmpltHelper.convertReadMePortDetailDoc(${port.docOccurrence})}
		Operation Cycle: ${tmpltHelper.convertReadMePortDetailDoc(${port.docOperation})}
		RangeLow:
		RangeHigh:
		DefaultValue:

#end

# </rtc-template>


======================================================================
    Service Port definition
======================================================================
# <rtc-template block="serviceport">
#if(${rtcParam.servicePorts.size()}>0)
#foreach($servicePort in ${rtcParam.servicePorts})
#if(${servicePort.servicePortInterfaces.size()}>0)
	PortName:    ${servicePort.name}
	Description: ${tmpltHelper.convertReadMePortDoc(${servicePort.docDescription})}
	Interface:   ${tmpltHelper.convertReadMePortDoc(${servicePort.docIfDescription})}
#foreach($serviceInterface in ${servicePort.servicePortInterfaces})
#if(${serviceInterface.index}==0)
		[Service Provider Interfaces]
#else
		[Service Consumer Interfaces]
#end
		Name:          ${serviceInterface.name}
		Type:          ${serviceInterface.interfaceType}
		Description:   ${tmpltHelper.convertReadMeInterfaceDoc(${serviceInterface.docDescription})}
		Argument:      ${tmpltHelper.convertReadMeInterfaceDoc(${serviceInterface.docArgument})}
		Return Value:  ${tmpltHelper.convertReadMeInterfaceDoc(${serviceInterface.docReturn})}
		Exception:     ${tmpltHelper.convertReadMeInterfaceDoc(${serviceInterface.docException})}
		PreCondition:  ${tmpltHelper.convertReadMeInterfaceDoc(${serviceInterface.docPreCondition})}
		PostCondition: ${tmpltHelper.convertReadMeInterfaceDoc(${serviceInterface.docPostCondition})}
#end#end#end#end
# </rtc-template> 

======================================================================
    Configuration definition
======================================================================
# <rtc-template block="configuration">
#if( ${rtcParam.configParams.size()} > 0 )
	Configuration:
#foreach($configParam in ${rtcParam.configParams})
		Name:            ${configParam.docDataName} ${configParam.name}
		Description:     ${tmpltHelper.convertReadMeConfigDoc(${configParam.docDescription})}
		Type:            ${configParam.type}
		DefaultValue:    ${configParam.docDefaultVal} ${configParam.defaultVal}
		Unit:            ${tmpltHelper.convertReadMeConfigDoc(${configParam.docUnit})}
		Range:           ${tmpltHelper.convertReadMeConfigDoc(${configParam.docRange})}
		Constraint:      ${tmpltHelper.convertReadMeConfigDoc(${configParam.docConstraint})}

#end
#end
# </rtc-template> 

This software is developed at the National Institute of Advanced
Industrial Science and Technology. Approval number H23PRO-????. This
software is licensed under the Lesser General Public License. See
COPYING.LESSER.

This area is reserved for future OpenRTM.

