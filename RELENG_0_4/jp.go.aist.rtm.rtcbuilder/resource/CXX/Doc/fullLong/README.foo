======================================================================
  RTComponent: foo specificatioin

  OpenRTM-aist-0.4.1
  Date: $Date$

  @author Noriaki Ando <n-ando@aist.go.jp>3456789412345678951234567896123456789
   7123456789812345

  Copyright (C) 2006-2008 ライセンス1234567890123456789012345678901234567890123
  4567890

  This file is generated by rtc-template with the following argments.

#   rtc-template -bcxx --module-name=foo 
#   --module-desc='MDesc' --module-version=1.0.1 --module-vendor=TA 
#   --module-category=Manip --module-comp-type=STATIC2 
#   --module-act-type=PERIODIC2 --module-max-inst=5 
#   --config=int_param0:int:0 --config=int_param1:int:1 --config=double_param0:double:0.11 --config=str_param0:std::string:hoge --config=str_param1:std::string:dara 
#   --inport=InP1:TimedShort --inport=InP2:TimedLong --outport=OutP1:TimedLong --outport=OutP2:TimedFloat 
#   --service-idl=C:\Tech-Arts\EclipseRTM\jp.go.aist.rtm.rtcbuilder\\resource\MyService.idl 
#   --consumer-idl=C:\Tech-Arts\EclipseRTM\jp.go.aist.rtm.rtcbuilder\\resource\DAQService.idl 
#   --service=svPort:acc:MyService 
#   --consumer=cmPort:rate:DAQService 


======================================================================
# <rtc-template block="module">
Module Name: foo
Description: MDesc
Version:     1.0.1
Vendor:      TA
Category:    Manip
Comp. Type:  STATIC2
Act. Type:   PERIODIC2
MAX Inst.:   5
Lang:        C++
Lang Type:   

Overview:    本コンポーネントの概要説明12345678901234567890123456789012345678901
             23456789012345678901234567890
In/Out:      本コンポーネントの入出力1234567890123456789012345678901234567890123
             456789012345678901234567890
Algorithm:   本コンポーネントのアルゴリズムなど123456789012345678901234567890123
             4567890123456789012345678901234567890
Reference:   参考文献の情報12345678901234567890123456789012345678901234567890123
             45678901234567890
# </rtc-template>


======================================================================
    Activity definition
======================================================================

[on_initialize]
	Description:   on_initialize概要説明123456789012345678901234567890123456789012
	               3456789012345678901234567890
	PreCondition:  on_initialize事前条件123456789012345678901234567890123456789012
	               3456789012345678901234567890
	PostCondition: on_initialize事後条件123456789012345678901234567890123456789012
	               3456789012345678901234567890

[on_finalize]
	Description:   on_finalize概要説明12345678901234567890123456789012345678901234
	               56789012345678901234567890
	PreCondition:  on_finalize事前条件12345678901234567890123456789012345678901234
	               56789012345678901234567890
	PostCondition: on_finalize事後条件12345678901234567890123456789012345678901234
	               56789012345678901234567890

[on_startup]
	Description:   on_startup概要説明123456789012345678901234567890123456789012345
	               6789012345678901234567890
	PreCondition:  on_startup事前条件123456789012345678901234567890123456789012345
	               6789012345678901234567890
	PostCondition: on_startup事後条件123456789012345678901234567890123456789012345
	               6789012345678901234567890

[on_shutdown]
	Description:   on_shutdown概要説明12345678901234567890123456789012345678901234
	               56789012345678901234567890
	PreCondition:  on_shutdown事前条件12345678901234567890123456789012345678901234
	               56789012345678901234567890
	PostCondition: on_shutdown事後条件12345678901234567890123456789012345678901234
	               56789012345678901234567890

[on_activated]
	Description:   on_activated概要説明1234567890123456789012345678901234567890123
	               456789012345678901234567890
	PreCondition:  on_activated事前条件1234567890123456789012345678901234567890123
	               456789012345678901234567890
	PostCondition: on_activated事後条件1234567890123456789012345678901234567890123
	               456789012345678901234567890

[on_deactivated]
	Description:   on_deactivated概要説明12345678901234567890123456789012345678901
	               23456789012345678901234567890
	PreCondition:  on_deactivated事前条件12345678901234567890123456789012345678901
	               23456789012345678901234567890
	PostCondition: on_deactivated事後条件12345678901234567890123456789012345678901
	               23456789012345678901234567890

[on_execute]
	Description:   on_execute概要説明123456789012345678901234567890123456789012345
	               6789012345678901234567890
	PreCondition:  on_execute事前条件123456789012345678901234567890123456789012345
	               6789012345678901234567890
	PostCondition: on_execute事後条件123456789012345678901234567890123456789012345
	               6789012345678901234567890

[on_aborting]
	Description:   on_aborting概要説明12345678901234567890123456789012345678901234
	               56789012345678901234567890
	PreCondition:  on_aborting事前条件12345678901234567890123456789012345678901234
	               56789012345678901234567890
	PostCondition: on_aborting事後条件12345678901234567890123456789012345678901234
	               56789012345678901234567890

[on_error]
	Description:   on_error概要説明12345678901234567890123456789012345678901234567
	               89012345678901234567890
	PreCondition:  on_error事前条件12345678901234567890123456789012345678901234567
	               89012345678901234567890
	PostCondition: on_error事後条件12345678901234567890123456789012345678901234567
	               89012345678901234567890

[on_reset]
	Description:   on_reset概要説明12345678901234567890123456789012345678901234567
	               89012345678901234567890
	PreCondition:  on_reset事前条件12345678901234567890123456789012345678901234567
	               89012345678901234567890
	PostCondition: on_reset事後条件12345678901234567890123456789012345678901234567
	               89012345678901234567890

[on_state_update]
	Description:   on_state_update概要説明1234567890123456789012345678901234567890
	               123456789012345678901234567890
	PreCondition:  on_state_update事前条件1234567890123456789012345678901234567890
	               123456789012345678901234567890
	PostCondition: on_state_update事後条件1234567890123456789012345678901234567890
	               123456789012345678901234567890

[on_rate_changed]
	Description:   on_rate_changed概要説明1234567890123456789012345678901234567890
	               123456789012345678901234567890
	PreCondition:  on_rate_changed事前条件1234567890123456789012345678901234567890
	               123456789012345678901234567890
	PostCondition: on_rate_changed事後条件1234567890123456789012345678901234567890
	               123456789012345678901234567890

======================================================================
    InPorts definition
======================================================================
# <rtc-template block="inport">

	Name:        InP1
	PortNumber:  0
	Description: InPort1の概要1234567890123456789012345678901234567890123456789012
	             345678901234567890
	PortType: 
	DataType:    TimedShort
	MaxOut: 
	[Data Elements]
		Name:
		Type:            InPort1のデータの型1234567890123456789012345678901234567890
		                 123456789012345678901234567890
		Number:          InPort1のデータの数1234567890123456789012345678901234567890
		                 123456789012345678901234567890
		Semantics:       InPort1のデータの意味12345678901234567890123456789012345678
		                 90123456789012345678901234567890
		Unit:            InPort1のデータの単位12345678901234567890123456789012345678
		                 90123456789012345678901234567890
		Frequency:       InPort1のデータの発生頻度1234567890123456789012345678901234
		                 567890123456789012345678901234567890
		Operation Cycle: InPort1のデータの処理周期1234567890123456789012345678901234
		                 567890123456789012345678901234567890
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        InP2
	PortNumber:  1
	Description: InPort2の概要1234567890123456789012345678901234567890123456789012
	             345678901234567890
	PortType: 
	DataType:    TimedLong
	MaxOut: 
	[Data Elements]
		Name:
		Type:            InPort2のデータの型1234567890123456789012345678901234567890
		                 123456789012345678901234567890
		Number:          InPort2のデータの数1234567890123456789012345678901234567890
		                 123456789012345678901234567890
		Semantics:       InPort2のデータの意味12345678901234567890123456789012345678
		                 90123456789012345678901234567890
		Unit:            InPort2のデータの単位12345678901234567890123456789012345678
		                 90123456789012345678901234567890
		Frequency:       InPort2のデータの発生頻度1234567890123456789012345678901234
		                 567890123456789012345678901234567890
		Operation Cycle: InPort2のデータの処理周期1234567890123456789012345678901234
		                 567890123456789012345678901234567890
		RangeLow:
		RangeHigh:
		DefaultValue:


# </rtc-template>

======================================================================
    OutPorts definition
======================================================================
# <rtc-template block="outport">

	Name:        OutP1
	PortNumber:  0
	Description: OutPort1の概要123456789012345678901234567890123456789012345678901
	             2345678901234567890
	PortType: 
	DataType:    TimedLong
	MaxOut: 
	[Data Elements]
		Name:
		Type:            OutPort1のデータの型123456789012345678901234567890123456789
		                 0123456789012345678901234567890
		Number:          OutPort1のデータの数123456789012345678901234567890123456789
		                 0123456789012345678901234567890
		Semantics:       OutPort1のデータの意味1234567890123456789012345678901234567
		                 890123456789012345678901234567890
		Unit:            OutPort1のデータの単位1234567890123456789012345678901234567
		                 890123456789012345678901234567890
		Frequency:       OutPort1のデータの発生頻度123456789012345678901234567890123
		                 4567890123456789012345678901234567890
		Operation Cycle: OutPort1のデータの処理周期123456789012345678901234567890123
		                 4567890123456789012345678901234567890
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        OutP2
	PortNumber:  1
	Description: OutPort2の概要123456789012345678901234567890123456789012345678901
	             2345678901234567890
	PortType: 
	DataType:    TimedFloat
	MaxOut: 
	[Data Elements]
		Name:
		Type:            OutPort2のデータの型123456789012345678901234567890123456789
		                 0123456789012345678901234567890
		Number:          OutPort2のデータの数123456789012345678901234567890123456789
		                 0123456789012345678901234567890
		Semantics:       OutPort2のデータの意味1234567890123456789012345678901234567
		                 890123456789012345678901234567890
		Unit:            OutPort2のデータの単位1234567890123456789012345678901234567
		                 890123456789012345678901234567890
		Frequency:       OutPort2のデータの発生頻度123456789012345678901234567890123
		                 4567890123456789012345678901234567890
		Operation Cycle: OutPort2のデータの処理周期123456789012345678901234567890123
		                 4567890123456789012345678901234567890
		RangeLow:
		RangeHigh:
		DefaultValue:


# </rtc-template>


======================================================================
    Service Port definition
======================================================================
# <rtc-template block="serviceport">
	PortName:    svPort
	Description: ServicePort1の概要12345678901234567890123456789012345678901234567
	             89012345678901234567890
	Interface:   ServicePort1のインターフェースの概要12345678901234567890123456789
	             01234567890123456789012345678901234567890
		[Service Provider Interfaces]
		Name:          acc
		Type:          MyService
		Description:   ServiceIF1の概要説明12345678901234567890123456789012345678901
		               23456789012345678901234567890
		Argument:      ServiceIF1の引数123456789012345678901234567890123456789012345
		               6789012345678901234567890
		Return Value:  ServiceIF1の返値123456789012345678901234567890123456789012345
		               6789012345678901234567890
		Exception:     ServiceIF1の例外123456789012345678901234567890123456789012345
		               6789012345678901234567890
		PreCondition:  ServiceIF1の事前条件12345678901234567890123456789012345678901
		               23456789012345678901234567890
		PostCondition: ServiceIF1の事後条件12345678901234567890123456789012345678901
		               23456789012345678901234567890
	PortName:    cmPort
	Description: ServicePort2の概要12345678901234567890123456789012345678901234567
	             89012345678901234567890
	Interface:   ServicePort2のインターフェースの概要12345678901234567890123456789
	             01234567890123456789012345678901234567890
		[Service Consumer Interfaces]
		Name:          rate
		Type:          DAQService
		Description:   ServiceIF2の概要説明12345678901234567890123456789012345678901
		               23456789012345678901234567890
		Argument:      ServiceIF2の引数123456789012345678901234567890123456789012345
		               6789012345678901234567890
		Return Value:  ServiceIF2の返値123456789012345678901234567890123456789012345
		               6789012345678901234567890
		Exception:     ServiceIF2の例外123456789012345678901234567890123456789012345
		               6789012345678901234567890
		PreCondition:  ServiceIF2の事前条件12345678901234567890123456789012345678901
		               23456789012345678901234567890
		PostCondition: ServiceIF2の事後条件12345678901234567890123456789012345678901
		               23456789012345678901234567890
# </rtc-template> 

======================================================================
    Configuration definition
======================================================================
# <rtc-template block="configuration">
	ConfigurationName: Config1の名前 int_param0
		Description:     Config1の概要1234567890123456789012345678901234567890123456
		                 789012345678901234567890
		DefaultValue:    Config1のデフォルト値 0
		Unit:            Config1の単位1234567890123456789012345678901234567890123456
		                 789012345678901234567890
		Range:           Config1の範囲1234567890123456789012345678901234567890123456
		                 789012345678901234567890
		Constraint:      Config1の制約条件123456789012345678901234567890123456789012
		                 3456789012345678901234567890
	ConfigurationName: Config2の名前 int_param1
		Description:     Config2の概要1234567890123456789012345678901234567890123456
		                 789012345678901234567890
		DefaultValue:    Config2のデフォルト値 1
		Unit:            Config2の単位1234567890123456789012345678901234567890123456
		                 789012345678901234567890
		Range:           Config2の範囲1234567890123456789012345678901234567890123456
		                 789012345678901234567890
		Constraint:      Config2の制約条件123456789012345678901234567890123456789012
		                 3456789012345678901234567890
	ConfigurationName: Config3の名前 double_param0
		Description:     Config3の概要1234567890123456789012345678901234567890123456
		                 789012345678901234567890
		DefaultValue:    Config3のデフォルト値 0.11
		Unit:            Config3の単位1234567890123456789012345678901234567890123456
		                 789012345678901234567890
		Range:           Config3の範囲1234567890123456789012345678901234567890123456
		                 789012345678901234567890
		Constraint:      Config3の制約条件123456789012345678901234567890123456789012
		                 3456789012345678901234567890
	ConfigurationName: Config4の名前 str_param0
		Description:     Config4の概要1234567890123456789012345678901234567890123456
		                 789012345678901234567890
		DefaultValue:    Config4のデフォルト値 hoge
		Unit:            Config4の単位1234567890123456789012345678901234567890123456
		                 789012345678901234567890
		Range:           Config4の範囲1234567890123456789012345678901234567890123456
		                 789012345678901234567890
		Constraint:      Config4の制約条件123456789012345678901234567890123456789012
		                 3456789012345678901234567890
	ConfigurationName: Config5の名前 str_param1
		Description:     Config5の概要1234567890123456789012345678901234567890123456
		                 789012345678901234567890
		DefaultValue:    Config5のデフォルト値 dara
		Unit:            Config5の単位1234567890123456789012345678901234567890123456
		                 789012345678901234567890
		Range:           Config5の範囲1234567890123456789012345678901234567890123456
		                 789012345678901234567890
		Constraint:      Config5の制約条件123456789012345678901234567890123456789012
		                 3456789012345678901234567890
# </rtc-template> 
This area is reserved for future OpenRTM.

