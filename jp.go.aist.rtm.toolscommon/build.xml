<project name="jp.go.aist.rtm.toolscommon" default="jar"
	xmlns:ant4eclipse="antlib:org.ant4eclipse"
	xmlns:antcontrib="antlib:net.sf.antcontrib">

	<property name="target.name" value="jp.go.aist.rtm.toolscommon" />

	<taskdef name="manifesttask" classname="aist.ManifestTask" />

	<property name="source" value="src"/>
	<property name="generated" value="generated"/>

	<property name="dist.dir" value="jar" />
	<property name="build.dir" value="bin"/>
	<property name="icons.dir" value="icons"/>
	<property name="lib.dir" value="lib"/>

	<property environment="env"/>
	<property name="eclipse.home" value="${env.ECLIPSE_HOME}"/>

	<property name="idlj" value="${java.home}\..\bin\idlj" />
	<property name="idl.dir" value="idl" />
	<property name="idl.BasicDataType" value="BasicDataType.idl" />
	<property name="idl.SDOPackage" value="SDOPackage11.idl" />
	<property name="idl.RTC" value="RTC10.idl" />
	<property name="idl.Manager" value="Manager.idl" />
	<property name="idl.ComponentObserver" value="ComponentObserver.idl" />
	<property name="idl.Logger" value="Logger.idl" />


	<taskdef uri="antlib:net.sf.antcontrib"
		resource="net/sf/antcontrib/antlib.xml" />
	<taskdef uri="antlib:org.ant4eclipse"
		resource="org/ant4eclipse/antlib.xml" />


	<property name="targetPlatformLocation" value="${eclipse.home}" />
	<property name="workspace" value="${basedir}/.." />
	<property name="project.name" value="jp.go.aist.rtm.toolscommon" />
	<tstamp>
		<format property="built.date" pattern="yyyy/MM/dd HH:mm:ss" />
	</tstamp>

	<target name="buildAll">
		<antcall target="clean" />
		<antcall target="idlCompile" />
		<antcall target="compile" />
		<antcall target="jar" />
	</target>

	<target name="idlCompile" description="IDLファイルをコンパイルします">
		<delete dir="${generated}" quiet="true"/>
		<property name="gen1.dir" value="${generated}_1"/>
		<property name="gen2.dir" value="${generated}_2"/>
		<property name="gen3.dir" value="${generated}_3"/>
		<delete dir="${gen1.dir}" quiet="true"/>
		<delete dir="${gen2.dir}" quiet="true"/>
		<delete dir="${gen3.dir}" quiet="true"/>

		<!--IDL(UTF-8)をAscii化-->
		<native2ascii dest="${gen1.dir}" src="${idl.dir}" encoding="UTF-8">
			<include name="${idl.BasicDataType}" />
			<include name="${idl.SDOPackage}" />
			<include name="${idl.RTC}" />
			<include name="${idl.Manager}" />
			<include name="${idl.ComponentObserver}" />
			<include name="${idl.Logger}" />
		</native2ascii>
		<!--IDLコンパイルを実行-->
		<exec executable="${idlj}">
			<arg line="-fall -td ${gen1.dir} -i ${gen1.dir} -emitAll ${gen1.dir}/${idl.SDOPackage}"/>
		</exec>
		<exec executable="${idlj}">
			<arg line="-fall -td ${gen1.dir} -i ${gen1.dir} -emitAll ${gen1.dir}/${idl.RTC}"/>
		</exec>
		<exec executable="${idlj}">
			<arg line="-fall -td ${gen1.dir} -i ${gen1.dir} -emitAll ${gen1.dir}/${idl.Manager}"/>
		</exec>
		<exec executable="${idlj}">
			<arg line="-fall -td ${gen1.dir} -i ${gen1.dir} -emitAll ${gen1.dir}/${idl.ComponentObserver}" />
		</exec>
		<exec executable="${idlj}">
			<arg line="-fall -td ${gen1.dir} -i ${gen1.dir} -emitAll ${gen1.dir}/${idl.Logger}"/>
		</exec>
		<!--自動生成コードへ付与されたSJISコメントをUTF-8化-->
		<copy todir="${gen2.dir}" outputEncoding="UTF-8" overwrite="yes">
			<fileset dir="${gen1.dir}">
				<include name="**/*.java" />
			</fileset>
		</copy>
		<!--自動生成コードをAscii化-->
		<native2ascii src="${gen2.dir}" dest="${gen3.dir}">
			<include name="**/*.java" />
		</native2ascii>
		<!--Ascii化されたコードを逆変換(UTF-8)-->
		<native2ascii src="${gen3.dir}" dest="${generated}" reverse="true">
			<include name="**/*.java" />
		</native2ascii>

		<delete dir="${gen1.dir}" quiet="true"/>
		<delete dir="${gen2.dir}" quiet="true"/>
		<delete dir="${gen3.dir}" quiet="true"/>
	</target>

	<target name="clean" description="ビルドで生成されたファイルを削除します">
		<delete includeEmptyDirs="true" quiet="true">
			<fileset dir="${build.dir}" includes="**/*.class" />
			<fileset dir="." includes="**/*.log" />
		</delete>
		<delete dir="${build.dir}/_SDOPackage" quiet="true"/>
		<delete dir="${build.dir}/OpenRTM" quiet="true"/>
		<delete dir="${build.dir}/RTM" quiet="true"/>
		<delete dir="${build.dir}/RTC" quiet="true"/>
		<delete dir="${build.dir}/jp" quiet="true"/>
		<delete dir="${generated}/_SDOPackage" quiet="true"/>
		<delete dir="${generated}/OpenRTM" quiet="true"/>
		<delete dir="${generated}/RTM" quiet="true"/>
		<delete dir="${generated}/RTC" quiet="true"/>
		<delete dir="${dist.dir}" quiet="true"/>
	</target>

	<target name="compile" description="ソースをコンパイルします">
		<mkdir dir="${build.dir}" />

		<ant4eclipse:targetPlatform id="eclipse-3.8">
		  <location dir="${targetPlatformLocation}" />
		</ant4eclipse:targetPlatform>	
		<ant4eclipse:jdtClassPathLibrary name="org.eclipse.jdt.junit.JUNIT_CONTAINER/4">
			<fileset dir="${eclipse.home}/plugins/" includes="**/*junit4*.jar" />
		</ant4eclipse:jdtClassPathLibrary>	

		<ant4eclipse:getJdtClassPath 
			pathid="build.classpath" 
			workspacedirectory="${workspace}" 
			projectname="${project.name}" >
			<jdtclasspathcontainerargument key="target.platform" value="eclipse-3.8" />
		</ant4eclipse:getJdtClassPath>
		<javac destdir="${build.dir}" encoding="UTF-8" includeantruntime="false"
			classpathref="build.classpath" classpath="lib/commons-lang-2.2.jar">
			<src path="${generated}" />
			<src path="${source}" />
		</javac>
	</target>

	<target name="jar" description="jarファイルを作成します">
		<copy file="${source}/jp/go/aist/rtm/toolscommon/nl/messages.properties" todir="${build.dir}/jp/go/aist/rtm/toolscommon/nl" />
		<copy todir="${build.dir}/jp/go/aist/rtm/toolscommon/model">
			<fileset dir="${source}/jp/go/aist/rtm/toolscommon/model">
				<include name="**.ecore" />
				<include name="**.xsd" />
				<include name="**.genmodel" />
			</fileset>
		</copy>
		<mkdir dir="${dist.dir}" />
		<delete>
			<fileset dir="${dist.dir}" includes="${target.name}_*.jar" />
		</delete>
		<!-- Version settings -->
		<manifesttask file="META-INF/MANIFEST.MF" key="Bundle-Version" property="manifest.project.version" />
		<condition property="project.version"
                   value="${env.PROJECT_VERSION}"
                   else="${manifest.project.version}">
			<isset property="env.PROJECT_VERSION" />
		</condition>
		<property name="jar.version" value="_${project.version}"/>
		<property name="jar.name" value="${target.name}${jar.version}"/>
		<!-- Updating MANIFEST.MF -->
		<manifest file="META-INF/MANIFEST.MF" mode="update">
			<attribute name="Bundle-Version" value="${project.version}"/>
			<attribute name="Built-By" value="${user.name}"/>
			<attribute name="Built-Date" value="${built.date}"/>
		</manifest>
		<!-- Creating a jar file -->
		<jar destfile="${dist.dir}/${jar.name}.jar" manifest="META-INF/MANIFEST.MF">
			<fileset dir="${build.dir}" />
			<fileset dir=".">
				<include name="icons/**.**" />
				<include name="lib/**.**" />
				<include name="schema/**.**" />
				<include name="plugin.xml" />
				<include name="plugin.properties" />
			</fileset>
		</jar>
	</target>

</project>
