cmake_minimum_required(VERSION 2.8 FATAL_ERROR)

project(${rtcParam.name})
string(TOLOWER ${dol}{PROJECT_NAME} PROJECT_NAME_LOWER)
include("${dol}{PROJECT_SOURCE_DIR}/cmake/utils.cmake")
set(PROJECT_VERSION ${rtcParam.version} CACHE STRING "${rtcParam.name} version")
DISSECT_VERSION()
set(PROJECT_DESCRIPTION "${rtcParam.description}")
set(PROJECT_VENDOR "${rtcParam.vender}")
set(PROJECT_AUTHOR "${rtcParam.vender}")
set(PROJECT_AUTHOR_SHORT "${rtcParam.vender}")

${sharp} Add an "uninstall" target
CONFIGURE_FILE ("${dol}{PROJECT_SOURCE_DIR}/cmake/uninstall_target.cmake.in"
    "${dol}{PROJECT_BINARY_DIR}/uninstall_target.cmake" IMMEDIATE @ONLY)
ADD_CUSTOM_TARGET (uninstall "${dol}{CMAKE_COMMAND}" -P
    "${dol}{PROJECT_BINARY_DIR}/uninstall_target.cmake")

${sharp}option(BUILD_EXAMPLES "Build and install examples" OFF)
option(BUILD_DOCUMENTATION "Build the documentation" ON)
${sharp}option(BUILD_TESTS "Build the tests" OFF)
${sharp}option(BUILD_TOOLS "Build the tools" OFF)
option(BUILD_IDL "Build and install idl" ON)
option(BUILD_SOURCES "Build and install sources" OFF)

option(STATIC_LIBS "Build static libraries" OFF)
if(STATIC_LIBS)
    set(LIB_TYPE STATIC)
else(STATIC_LIBS)
    set(LIB_TYPE SHARED)
endif(STATIC_LIBS)

${sharp} Set up installation directories
set(BIN_INSTALL_DIR "components/bin")
set(LIB_INSTALL_DIR "components/lib")
set(INC_INSTALL_DIR
    "components/include/${dol}{PROJECT_NAME_LOWER}-${dol}{PROJECT_VERSION_MAJOR}")
set(SHARE_INSTALL_DIR
    "components/share/${dol}{PROJECT_NAME_LOWER}-${dol}{PROJECT_VERSION_MAJOR}")

${sharp} Get necessary dependency information
if(NOT WIN32)
    list(APPEND CMAKE_MODULE_PATH ${dol}{PROJECT_SOURCE_DIR}/cmake/Modules)
endif(NOT WIN32)
find_package(OpenRTM REQUIRED)

${sharp} Universal settings
${sharp}enable_testing()

${sharp} Subdirectories
add_subdirectory(cmake)
if(BUILD_DOCUMENTATION)
    add_subdirectory(doc)
endif(BUILD_DOCUMENTATION)
${sharp}if(BUILD_EXAMPLES)
${sharp}    add_subdirectory(examples)
${sharp}endif(BUILD_EXAMPLES)
if(BUILD_IDL)
    add_subdirectory(idl)
endif(BUILD_IDL)
add_subdirectory(include)
add_subdirectory(src)
${sharp}if(BUILD_TESTS)
${sharp}    add_subdirectory(test)
${sharp}endif(BUILD_TESTS)
${sharp}if(BUILD_TOOLS)
${sharp}    add_subdirectory(tools)
${sharp}endif(BUILD_TOOLS)
if(BUILD_SOURCES)
    add_subdirectory(src)
endif(BUILD_SOURCES)

${sharp} Package creation
include(InstallRequiredSystemLibraries)
set(PROJECT_EXECUTABLES ${dol}{PROJECT_NAME_LOWER}Comp
    "${dol}{PROJECT_NAME_LOWER}Comp")
set(cpack_options "${dol}{PROJECT_BINARY_DIR}/cpack_options.cmake")
configure_file("${dol}{PROJECT_SOURCE_DIR}/cmake/cpack_options.cmake.in"
    ${dol}{cpack_options} @ONLY)
set(CPACK_PROJECT_CONFIG_FILE ${dol}{cpack_options})
include(${dol}{CPACK_PROJECT_CONFIG_FILE})
include(CPack)


